// Script para forzar el uso de variables de producci√≥n localmente
// √ötil para probar la conexi√≥n con el backend de producci√≥n desde localhost

console.log('üîß Forzando configuraci√≥n de producci√≥n...');

// Override de la funci√≥n de detecci√≥n de entorno
window.FORCE_PRODUCTION = true;

// Funci√≥n personalizada para cargar variables de producci√≥n
async function loadProductionVars() {
    try {
        const response = await fetch('/env.production');
        if (!response.ok) {
            throw new Error('No se pudo cargar env.production');
        }
        
        const envText = await response.text();
        const envVars = {};
        
        envText.split('\n').forEach(line => {
            line = line.trim();
            if (line && !line.startsWith('#')) {
                const [key, ...valueParts] = line.split('=');
                if (key && valueParts.length > 0) {
                    envVars[key.trim()] = valueParts.join('=').trim();
                }
            }
        });
        
        return envVars;
    } catch (error) {
        console.error('Error cargando variables de producci√≥n:', error);
        return {
            VITE_API_BASE_URL: 'https://back-adm.fly.dev',
            VITE_APP_NAME: 'AquaDelivery',
            VITE_DEBUG_MODE: 'true',
            VITE_LOG_API_CALLS: 'true'
        };
    }
}

// Inicializar con variables de producci√≥n
window.initProductionConfig = async function() {
    window.ENV_VARS = await loadProductionVars();
    console.log('‚úÖ Variables de producci√≥n cargadas:', window.ENV_VARS);
    console.log('üåê Backend URL:', window.ENV_VARS.VITE_API_BASE_URL);
    return window.ENV_VARS;
};

console.log('üìã Para usar: await initProductionConfig() en la consola');
console.log('üìã Luego: location.reload() para recargar con nueva config');
