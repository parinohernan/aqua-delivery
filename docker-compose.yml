version: '3.8'

services:
  # Base de datos MySQL
  database:
    image: mysql:8.0
    container_name: delivery_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-deliverydeagua}
      MYSQL_USER: ${DB_USER:-delivery_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-delivery_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./documentos/deliverydeagua.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - delivery_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: delivery_backend
    restart: unless-stopped
    environment:
      PORT: 8001
      DB_HOST: database
      DB_USER: ${DB_USER:-delivery_user}
      DB_PASSWORD: ${DB_PASSWORD:-delivery_password}
      DB_NAME: ${DB_NAME:-deliverydeagua}
      DB_PORT: 3306
      JWT_SECRET: ${JWT_SECRET:-tu-jwt-secret-muy-seguro}
      NODE_ENV: production
      FRONTEND_URL: http://localhost:80
    ports:
      - "8001:8001"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - delivery_network
    volumes:
      - ./backend:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: delivery_frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - delivery_network
    environment:
      - NODE_ENV=production

volumes:
  mysql_data:
    driver: local

networks:
  delivery_network:
    driver: bridge
