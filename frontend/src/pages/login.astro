---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Delivery Manager - Login">
  <div class="login-container">
    <div class="login-card">
      <div class="text-center">
        <div class="login-icon">
          <img src="/logo2-min.webp" alt="AquaDelivery Logo" style="width: 10rem; height: 10rem;" />
        </div>
        <!-- <h1 class="login-title">AquaDelivery</h1>
        <p class="login-subtitle">Ingresa a tu cuenta</p> -->
      </div>

      <form id="loginForm">
        <div class="form-group">
          <label for="telegramId" class="form-label">
            Contrase√±a de acceso 
          </label>
          <input
            type="password"
            id="telegramId"
            name="telegramId"
            required
            class="form-input"
            placeholder="Ingresa tu contrase√±a de acceso"
          />
        </div>

        <div class="form-group">
          <label for="codigoEmpresa" class="form-label">
            C√≥digo de Empresa
          </label>
          <input
            type="text"
            id="codigoEmpresa"
            name="codigoEmpresa"
            required
            class="form-input"
            placeholder="C√≥digo de empresa"
          />
        </div>

        <button type="submit" class="btn-primary">
          Iniciar Sesi√≥n
        </button>
        <span class="login-subtitle" style="font-size: 0.8rem; color: #666; margin-top: 1rem;">Puedes probar la aplicaci√≥n usando los siguientes datos:
          <br> 
          Contrase√±a: test
          \
          Empresa: 1
        </span>
      </form>

      <div id="errorMessage" class="error-message hidden">
      </div>
    </div>
  </div>
</Layout>

<script>
  console.log('üöÄ Script de login cargado');
  document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM cargado, buscando formulario...');
    const loginForm = document.getElementById('loginForm');
    if (!loginForm) {
      console.error('‚ùå No se encontr√≥ el formulario de login');
      return;
    }
    console.log('‚úÖ Formulario encontrado, agregando event listener');

    loginForm.addEventListener('submit', async function(e) {
      e.preventDefault();
      console.log('üî• Evento submit capturado');
      console.log('‚úÖ preventDefault ejecutado');

      const target = e.target as HTMLFormElement;
      const formData = new FormData(target);
      const telegramId = formData.get('telegramId');
      const codigoEmpresa = formData.get('codigoEmpresa');

      console.log('üìù Datos del formulario:', { telegramId, codigoEmpresa });

      const errorDiv = document.getElementById('errorMessage');
      const submitButton = target.querySelector('button[type="submit"]') as HTMLButtonElement;

      // Mostrar loading
      if (submitButton) {
        submitButton.disabled = true;
        submitButton.textContent = 'Iniciando sesi√≥n...';
      }
      if (errorDiv) {
        errorDiv.classList.add('hidden');
      }

      try {
        console.log('Enviando petici√≥n de login...');
        const loginUrl = 'https://back-adm.fly.dev/auth/login';
        console.log('URL de login:', loginUrl);
        
        const response = await fetch(loginUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            telegramId,
            codigoEmpresa
          })
        });

        console.log('Respuesta recibida:', response.status, response.statusText);

        if (!response.ok) {
          const errorText = await response.text();
          console.error('Error del servidor:', errorText);
          throw new Error(`Error ${response.status}: ${errorText || 'Error del servidor'}`);
        }

        const data = await response.json();
        
        console.log('üì¶ Datos recibidos del servidor:', data);

        if (response.ok && data.token) {
          console.log('‚úÖ Login exitoso! Token recibido');

          // Guardar token y datos del usuario
          localStorage.setItem('token', data.token);
          localStorage.setItem('user', JSON.stringify(data.user || data.vendedor || {}));

          console.log('üíæ Datos guardados en localStorage');
          console.log('üîÑ Redirigiendo al dashboard...');

          // Redirigir inmediatamente
          window.location.href = '/';
        } else {
          console.log('‚ùå Login fall√≥:', data);
          throw new Error(data.message || data.error || 'Error al iniciar sesi√≥n');
        }
      } catch (error) {
        console.error('Error:', error);
        if (errorDiv) {
          const errorMessage = error instanceof Error ? error.message : 'Error al iniciar sesi√≥n';
          errorDiv.textContent = errorMessage;
          errorDiv.classList.remove('hidden');
        }
      } finally {
        if (submitButton) {
          submitButton.disabled = false;
          submitButton.textContent = 'Iniciar Sesi√≥n';
        }
      }
    });
  });
</script>
