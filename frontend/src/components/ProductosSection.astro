---
// Componente modular para la sección de productos
---

<div class="productos-section">
  <div class="productos-header">
    <div class="header-content">
      <h2 class="section-title">
        <span class="icon">📦</span>
        Gestión de Productos
      </h2>
      <p class="section-subtitle">Administra tu catálogo de productos de manera eficiente</p>
    </div>
  </div>

  <div class="productos-container">
    <!-- Panel de acciones -->
    <div class="actions-panel">
      <div class="actions-header">
        <h3>⚡ Acciones Rápidas</h3>
      </div>
      
      <div class="actions-content">
        <button onclick="window.showCreateProductModal()" class="btn-create">
          <span class="btn-icon">➕</span>
          Nuevo Producto
        </button>
        
        <div class="search-group">
          <div class="search-input-wrapper">
            <span class="search-icon">🔍</span>
            <input 
              type="text" 
              id="productosSearch" 
              placeholder="Buscar productos..."
              class="search-input"
            >
          </div>
        </div>
      </div>
    </div>

    <!-- Panel de filtros -->
    <div class="filters-panel">
      <div class="filters-header">
        <h3>🔍 Filtros</h3>
      </div>
      
      <div class="filters-content">
        <div class="filter-group">
          <label for="filterProductosEstado" class="filter-label">
            <span class="label-icon">📊</span>
            Estado
          </label>
          <select id="filterProductosEstado" class="filter-select">
            <option value="todos">Todos los productos</option>
            <option value="activos">Solo activos</option>
            <option value="inactivos">Solo inactivos</option>
          </select>
        </div>
        
        <button onclick="window.clearProductosFilters()" class="btn-clear">
          <span class="btn-icon">🔄</span>
          Limpiar Filtros
        </button>
      </div>
    </div>

    <!-- Lista de productos -->
    <div class="products-area">
      <div id="productosList" class="products-container">
        <div class="empty-state">
          <div class="empty-icon">📦</div>
          <h4>Cargando productos...</h4>
          <p>Preparando tu catálogo de productos</p>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Estilos importados desde productos.css -->

<script>
  // Configurar búsqueda con debounce
  document.addEventListener('DOMContentLoaded', function() {
    console.log('🔧 Configurando event listeners de productos...');
    
    const searchInput = document.getElementById('productosSearch');
    if (searchInput) {
      console.log('✅ Input de búsqueda encontrado');
      let searchTimeout;
      
      searchInput.addEventListener('input', function(e) {
        const target = e.target as HTMLInputElement;
        console.log('🔍 Input de búsqueda detectado:', target.value);
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          console.log('🔍 Ejecutando búsqueda:', target.value);
          if (window.searchProducts) {
            window.searchProducts(target.value);
          } else {
            console.error('❌ window.searchProducts no está disponible');
          }
        }, 300);
      });
      console.log('✅ Event listener de búsqueda configurado');
    } else {
      console.error('❌ No se encontró el input de búsqueda');
    }

    // Configurar filtro de estado
    const estadoFilter = document.getElementById('filterProductosEstado');
    if (estadoFilter) {
      console.log('✅ Selector de estado encontrado');
      estadoFilter.addEventListener('change', function(e) {
        const target = e.target as HTMLSelectElement;
        console.log('🔍 Cambio de estado detectado:', target.value);
        if (window.filterProductosByEstado) {
          window.filterProductosByEstado();
        } else {
          console.error('❌ window.filterProductosByEstado no está disponible');
        }
      });
      console.log('✅ Event listener de filtro de estado configurado');
    } else {
      console.error('❌ No se encontró el selector de estado');
    }
  });

  // Función para configurar event listeners cuando se carga la sección
  function setupProductosEventListeners() {
    console.log('🔧 Configurando event listeners de productos (setupProductosEventListeners)...');
    
    // Búsqueda con debounce
    const searchInput = document.getElementById('productosSearch');
    if (searchInput) {
      console.log('✅ Input de búsqueda encontrado en setupProductosEventListeners');
      let searchTimeout;
      
      searchInput.addEventListener('input', function(e) {
        const target = e.target as HTMLInputElement;
        console.log('🔍 Input de búsqueda detectado:', target.value);
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
          console.log('🔍 Ejecutando búsqueda:', target.value);
          if (window.searchProducts) {
            window.searchProducts(target.value);
          } else {
            console.error('❌ window.searchProducts no está disponible');
          }
        }, 300);
      });
      console.log('✅ Event listener de búsqueda configurado');
    }

    // Filtro de estado
    const estadoFilter = document.getElementById('filterProductosEstado');
    if (estadoFilter) {
      console.log('✅ Selector de estado encontrado en setupProductosEventListeners');
      estadoFilter.addEventListener('change', function(e) {
        const target = e.target as HTMLSelectElement;
        console.log('🔍 Cambio de estado detectado:', target.value);
        if (window.filterProductosByEstado) {
          window.filterProductosByEstado();
        } else {
          console.error('❌ window.filterProductosByEstado no está disponible');
        }
      });
      console.log('✅ Event listener de filtro de estado configurado');
    }
  }

  // Hacer la función disponible globalmente
  (window as any).setupProductosEventListeners = setupProductosEventListeners;
</script>
